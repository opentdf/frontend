apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "abacus.fullname" . }}
  labels:
    {{- include "abacus.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: opentdf
      app.kubernetes.io/name: abacus
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        app.kubernetes.io/instance: opentdf
        app.kubernetes.io/name: abacus
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
              {{- toYaml . | nindent 8 }}
            {{- end }}
      serviceAccountName: {{ include "abacus.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: abacus
          envFrom:
            - configMapRef:
                name: opentdf-abacus-cm
          image: opentdf/abacus
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
